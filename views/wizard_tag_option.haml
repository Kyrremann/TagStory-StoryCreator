!!!
%html
  %head
    %title Story Wizard - Option
    = haml :"templates/header_imports"
    %script(src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBj0MzAv62ik_KGQi9WCVkSCx3qDGykiZ0&libraries=places")
    :javascript
      function initialize() {
        var lat = #{empty_s?(params["lat"]) ? "59.9167055" : params["lat"]}
        var long = #{empty_s?(params["long"]) ? "10.7294875" : params["long"]}
        var zoomLevel = #{empty_s?(params["zoom_level"]) ? 12 : params['zoom_level']}
        var myLatLng = new google.maps.LatLng(lat, long);
        var map_options = {
          center: myLatLng,
          zoom: zoomLevel,
          mapTypeId: google.maps.MapTypeId.ROADMAP
        }

        var map_canvas = document.getElementById('map_canvas');
        var map = new google.maps.Map(map_canvas, map_options)

        var input = /** @type {HTMLInputElement} */(document.getElementById('pac-input'));

        var autocomplete = new google.maps.places.Autocomplete(input)
        autocomplete.bindTo('bounds', map);

        var infowindow = new google.maps.InfoWindow({
          // content: "Option: "
        });
        var marker = new google.maps.Marker({
          position: myLatLng,
          map: map,
          draggable: true
        });

        google.maps.event.addListener(autocomplete, 'place_changed', function() {
            infowindow.close();
            marker.setVisible(false);
            var place = autocomplete.getPlace();
            if (!place.geometry) {
              return;
            }

            if (place.geometry.viewport) {
              map.fitBounds(place.geometry.viewport);
            } else {
              map.setCenter(place.geometry.location);
              map.setZoom(zoomLevel);
            }

            marker.position = place.geometry.location;
            document.getElementById('lat').value = marker.position.lat();
            document.getElementById('long').value = marker.position.lng();
            marker.setVisible(true);
        });

        google.maps.event.addListener(marker, 'click', function() {
          // infowindow.open(map, marker);
        });
        google.maps.event.addListener(marker, 'drag', function() {
          document.getElementById('lat').value = marker.position.lat();
          document.getElementById('long').value = marker.position.lng();
        });
      }

      google.maps.event.addDomListener(window, 'load', initialize);

  %body
    = haml :"templates/nav"
    .pure-g
      .pure-u-1-4
      .pure-u-1-2
        %form.pure-form.pure-form-aligned{:method => "POST", :role => "form", :enctype => "multipart/form-data"}
          %fieldset
            %legend Option wizard

          .pure-control-group
            %label{:for => "method"} Method:
            %select{:name => "method"}
              %option{:value => "text", :selected => params['method'] == 'text'} Text
              %option{:value => "image", :selected => params['method'] == 'image'} Image
              %option{:value => "sound", :selected => params['method'] == 'sound'} Sound
              %option{:value => "map", :selected => params['method'] == 'map'} Map
            %img{:src => "/images/information-icon.png", 'data-ot' => "The method dictates what type of interaction/information you can give to the reader.<br /><strong>Text</strong>: Used to give the reader a textual hint about the next destination.<br /><strong>Image</strong>: Show an image of the next location.<br /><strong>Sound</strong>: Play a sound that hints about the next location.<br /><strong>Map</strong>: Shows the map using GPS where the next location is."}

          %legend These are based on what you have previously chosen

          .pure-control-group
            %label{:for => "answer"} Answer:
            %input{:type => "text", :name => "answer", :value => "#{params['answer']}"}
            %img{:src => "/images/information-icon.png", 'data-ot' => "If you have chosen Question on this tag, this field needs to be filled out, as it acts as one of the answer."}

          .pure-control-group
            %label{:for => "title"} Title:
            %input{:type => "text", :name => "title", :value => "#{params['title']}"}
            %img{:src => "/images/information-icon.png", 'data-ot' => "You can set the title of each tag-option screen. Will change the title in the action bar."}

          %legend These depends on your method of choice

          .pure-control-group
            %label{:for => "text"} Text:
            %textarea{:name => "text", :rows => "6", :cols => "23"} #{params['text']}
            %img{:src => "/images/information-icon.png", 'data-ot' => "If you chose method: text, this field needs to be filled out. On other methods this can act as a supplementing field. For example, informing that you picked the correct answer on the tag question."}

          - if params['method'] == 'image'
            .pure-control-group
              %label{:for => "image_source_top"} Image (top):
              %input{:type => "text", :name => "image_source_top", :value => "#{params['image_source_top']}"}
              %img{:src => "/images/information-icon.png", 'data-ot' => ""}

            .pure-control-group
              %label{:for => "content"} Upload new:
              %input{:type => "file", :name => "content[top]"}

            - unless params['image_source_top'].nil? or params['image_source_top'].empty?
              .pure-control-group
                %img{:src => "https://s3-eu-west-1.amazonaws.com/tagstory/images/#{params['image_source_top']}", :width => '500px'}

            .pure-control-group
              %label{:for => "image_source_bottom"} Image (bottom):
              %input{:type => "text", :name => "image_source_bottom", :value => "#{params['image_source_bottom']}"}
              %img{:src => "/images/information-icon.png", 'data-ot' => ""}

            .pure-control-group
              %label{:for => "content"} Upload new:
              %input{:type => "file", :name => "content[bottom]"}

            - unless params['image_source_bottom'].nil? or params['image_source_bottom'].empty?
              .pure-control-group
                %img{:src => "https://s3-eu-west-1.amazonaws.com/tagstory/images/#{params['image_source_bottom']}", :width => '500px'}

          - if params['method'] == 'sound'
            .pure-control-group
              %label{:for => "sound_source"} Sound:
              %input{:type => "text", :name => "sound_source", :value => "#{params['sound_source']}"}
              %img{:src => "/images/information-icon.png", 'data-ot' => ""}

          - if params['method'] == 'map'
            .pure-control-group
              %label{:for => "lat"} GPS latitude:
              %input{:type => "text", :id => "lat", :name => "lat", :value => "#{params['lat']}"}
              %img{:src => "/images/information-icon.png", 'data-ot' => ""}

            .pure-control-group
              %label{:for => "long"} GPS longitude:
              %input{:type => "text", :id => "long", :name => "long", :value => "#{params['long']}"}
              %img{:src => "/images/information-icon.png", 'data-ot' => ""}

            .pure-control-group
              %label{:for => "zoom_level"} Zoom level:
              %input{:type => "text", :name => "zoom_level", :placeholder => "12", :value => "#{params['zoom_level']}"}

          %legend Points to the next tag, can't be filled out before the next tag is made

          .pure-control-group
            %label{:for => "next"} Next:
            %select{:name => "next"}
              - index = 1
              - tags.each do | key, value |
                %option{:value => key, :selected => params['next'] == key} ##{index} #{value['title']}
                - index += 1
            %img{:src => "/images/information-icon.png", 'data-ot' => ""}

          .pure-control-group
            %ul.pure-paginator
              %li
                %p Options
              - tags[tagId]["options"].each_with_index do | array, index |
                %li
                  - @url = "/mystories/wizard/#{storyId}/#{tagId}/#{index}"
                  - @class = "#{"pure-button-active" if array[0] == optionId}"
                  %a.pure-button{:href => @url, :class => @class} #{index + 1}

          .pure-control-group
            %ul.pure-paginator
              %li
                %p Tags
              - tags.each_with_index do | array, index |
                %li
                  - @url = "/mystories/wizard/#{storyId}/#{array[0]}"
                  - @class = "#{"pure-button-active" if array[0] == tagId}"
                  %a.pure-button{:href => @url, :class => @class} #{index + 1}

          .pure-control-group
            %a.pure-button{:href => "/mystories/wizard/#{storyId}"} Story
            %button.pure-button{:type => "submit", :name => "save"} Save
            %button.pure-button{:type => "submit", :name => "add_option"} Add option
            %button.pure-button{:type => "submit", :name => "delete_option"} Delete option

            
        - if params['method'] == 'map'
          .pure-form.pure-form-aligned
            .pure-control-group
              %label{:for => "pac_input"} Search:
              %input{:id => "pac-input", :class => "", :type => "text", :placeholder => "Search Box"}
              %div{:id => "map_canvas"}
      .pure-u-1-4
